import chimera
import time
import numpy as np
import os
from chimera import runCommand

file = "/tmp/1CLV_l_b.pdb"
fn = os.path.splitext(os.path.basename(file))[0] + ".dae"

# read entire pdb
str = open(file, "r").read()
i = 0
pos = []
posc = np.zeros(shape=(0,3))
for line in str.split("\n"):
    try:
        if line[0:4] == "ATOM" or line[0:6] == "HETATM":
            pos.append(i)
            x = np.float(line[30:38])
            y = np.float(line[38:46])
            z = np.float(line[46:54])
            posc = np.append(posc, [[x,y,z]], axis=0)
    except:
        pass
    i+=1

# center the object on (0,0,0)
xmin, ymin, zmin = posc.min(axis=0)
xmax, ymax, zmax = posc.max(axis=0)
posc[:,0] -= (np.abs(xmax - xmin)/2) + xmin
posc[:,1] -= (np.abs(ymax - ymin)/2) + ymin
posc[:,2] -= (np.abs(zmax - zmin)/2) + zmin

# write temporary pdb
tempfile = "/tmp/temp.pdb"
f = open(tempfile, "w")
i = 0
c = 0
for line in str.split("\n"):
    if i in pos:
        try:
            linen = line[:30]
            linen += "{0:8.3f}{1:8.3f}{2:8.3f}".format(posc[c,0], posc[c,1], posc[c,2])
            linen += line[54:]
            c+=1
        except:
            linen = line
            pass
    else:
        linen = line
    f.write(linen+"\n")
    i+=1

runCommand("open "+tempfile)
runCommand("preset apply interactive 2")
runCommand("preset apply publication 1")
runCommand("wait 1")
runCommand("export "+fn)
runCommand("stop")

